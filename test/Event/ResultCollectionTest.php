<?php

namespace Mindy\Test;

use Mindy\Event\EventManager;
use Mindy\Event\Result;
use Mindy\Event\ResultCollection;

/**
 * Test class for ResultCollection.
 * Generated by PHPUnit on 2011-02-23 at 20:23:06.
 */
class ResultCollectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ResultCollection
     */
    protected $collection;

    public function newCollection($stopped = false)
    {
        $collection = new ResultCollection;

        $origin = new \StdClass;
        $sender = get_class($origin);
        $signal = 'mock_signal';

        for ($i = 0; $i < 5; $i++) {
            $value = 'mock_value_' . $i;
            $result = new Result($origin, $sender, $signal, $value);
            $collection->append($result);
        }

        if ($stopped) {
            $result = new Result($origin, $sender, $signal, EventManager::STOP);
            $collection->append($result);
        }
        return $collection;
    }

    public function testGetLast()
    {
        $collection = $this->newCollection();
        $result = $collection->getLast();
        $this->assertSame('mock_value_4', $result->value);

        $collection = new ResultCollection;
        $this->assertNull($collection->getLast());
    }

    public function testIsStopped()
    {
        $collection = $this->newCollection();
        $this->assertFalse($collection->isStopped());

        $collection = $this->newCollection(true);
        $this->assertTrue($collection->isStopped());

        $collection = new ResultCollection;
        $this->assertNull($collection->isStopped());
    }
}
